[workspace]
members = ["cargo:."]

# Config for 'dist'
[dist]
# The preferred dist version to use in CI (Cargo.toml SemVer syntax)
cargo-dist-version = "0.28.0"
# CI backends to support
ci = "github"
# The installers to generate for each app
installers = ["shell", "powershell", "npm", "homebrew"]
# Target platforms to build apps for (Rust target-triple syntax)
targets = ["aarch64-apple-darwin", "aarch64-unknown-linux-gnu", "x86_64-apple-darwin", "x86_64-unknown-linux-gnu", "x86_64-unknown-linux-musl", "x86_64-pc-windows-msvc"]
# Path that installers should place binaries in
install-path = "CARGO_HOME"
# Whether to install an updater program
install-updater = true
# A GitHub repo to push Homebrew formulas to
tap = "cyfrin/homebrew-tap"
# A namespace to use when publishing this package to the npm registry
npm-scope = "@cyfrin"
# Publish jobs to run in CI
publish-jobs = ["homebrew", "npm"]

[dist.github-custom-runners]
global = "ubuntu-latest"

[dist.github-custom-runners.x86_64-unknown-linux-gnu]
runner = "ubuntu-latest"
container = { image = "quay.io/pypa/manylinux_2_28_x86_64", host = "x86_64-unknown-linux-musl" }

[dist.github-custom-runners.x86_64-unknown-linux-musl]
runner = "ubuntu-latest"
container = { image = "quay.io/pypa/manylinux_2_28_x86_64", host = "x86_64-unknown-linux-musl" }

[dist.github-custom-runners.aarch64-unknown-linux-gnu]
runner = "ubuntu-latest"
container = { image = "quay.io/pypa/manylinux_2_28_x86_64", host = "x86_64-unknown-linux-musl" }
